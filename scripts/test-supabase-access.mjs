/**
 * Script de test pour v√©rifier l'acc√®s Supabase
 *
 * Ce script teste toutes les fonctionnalit√©s du helper
 */

import {
  supabase,
  viewQuests,
  viewAchievements,
  viewStats,
  getTopPlayers,
} from './supabase-helper.mjs';

console.log('üß™ TEST D\'ACC√àS SUPABASE\n');
console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');

async function runTests() {
  let passed = 0;
  let failed = 0;

  // Test 1: Connexion Supabase
  console.log('1Ô∏è‚É£  Test de connexion Supabase...');
  try {
    const { data, error } = await supabase.from('daily_quests').select('count');
    if (error) throw error;
    console.log('   ‚úÖ Connexion r√©ussie\n');
    passed++;
  } catch (err) {
    console.error('   ‚ùå √âchec:', err.message, '\n');
    failed++;
  }

  // Test 2: R√©cup√©ration des qu√™tes
  console.log('2Ô∏è‚É£  Test r√©cup√©ration des qu√™tes...');
  try {
    const quests = await viewQuests();
    if (!quests || quests.length === 0) throw new Error('Aucune qu√™te trouv√©e');
    console.log('   ‚úÖ Qu√™tes r√©cup√©r√©es\n');
    passed++;
  } catch (err) {
    console.error('   ‚ùå √âchec:', err.message, '\n');
    failed++;
  }

  // Test 3: R√©cup√©ration des achievements
  console.log('3Ô∏è‚É£  Test r√©cup√©ration des achievements...');
  try {
    const achievements = await viewAchievements();
    if (!achievements || achievements.length === 0) throw new Error('Aucun achievement trouv√©');
    console.log('   ‚úÖ Achievements r√©cup√©r√©s\n');
    passed++;
  } catch (err) {
    console.error('   ‚ùå √âchec:', err.message, '\n');
    failed++;
  }

  // Test 4: Statistiques
  console.log('4Ô∏è‚É£  Test r√©cup√©ration des statistiques...');
  try {
    const stats = await viewStats();
    if (stats === null) throw new Error('Stats null');
    console.log('   ‚úÖ Statistiques r√©cup√©r√©es\n');
    passed++;
  } catch (err) {
    console.error('   ‚ùå √âchec:', err.message, '\n');
    failed++;
  }

  // Test 5: Top players (peut √™tre vide, c'est normal)
  console.log('5Ô∏è‚É£  Test r√©cup√©ration top players...');
  try {
    const players = await getTopPlayers(5);
    console.log(`   ‚úÖ Top players r√©cup√©r√©s (${players?.length || 0} joueurs)\n`);
    passed++;
  } catch (err) {
    console.error('   ‚ùå √âchec:', err.message, '\n');
    failed++;
  }

  // R√©sum√©
  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
  console.log(`\nüìä R√âSULTAT: ${passed}/${passed + failed} tests r√©ussis\n`);

  if (failed === 0) {
    console.log('‚úÖ TOUS LES TESTS SONT PASS√âS !');
    console.log('\nüéâ Claude Code a maintenant un acc√®s permanent √† Supabase.');
    console.log('\nDans une nouvelle conversation, vous pouvez simplement demander :');
    console.log('  ‚Ä¢ "Montre-moi les qu√™tes"');
    console.log('  ‚Ä¢ "Affiche les statistiques Supabase"');
    console.log('  ‚Ä¢ "Combien d\'utilisateurs ?"');
    console.log('\nClaude utilisera automatiquement le helper Supabase.\n');
  } else {
    console.log('‚ùå CERTAINS TESTS ONT √âCHOU√â');
    console.log('\nV√©rifiez :');
    console.log('  1. Les variables d\'environnement dans .env');
    console.log('  2. La connexion internet');
    console.log('  3. Les permissions Supabase\n');
  }

  console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');
}

runTests()
  .then(() => process.exit(0))
  .catch((err) => {
    console.error('\n‚ùå ERREUR FATALE:', err);
    process.exit(1);
  });
